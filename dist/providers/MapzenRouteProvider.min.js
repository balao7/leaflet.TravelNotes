/*! leaflet.TravelNotesMapzen - version 1.0.0 - 2017-09-13 - Copyright 2017 Christian Guyette - Contact: http//www.ouaie.be/ - This  program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or any later version.*/


!function e(r,t,n){function i(o,u){if(!t[o]){if(!r[o]){var d="function"==typeof require&&require;if(!u&&d)return d(o,!0);if(a)return a(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var c=t[o]={exports:{}};r[o][0].call(c.exports,function(e){var t=r[o][1][e];return i(t||e)},c,c.exports,e,r,t,n)}return t[o].exports}for(var a="function"==typeof require&&require,o=0;o<n.length;o++)i(n[o]);return i}({1:[function(e,r,t){"use strict";function n(e,r){e=Math.round(e*r),(e<<=1)<0&&(e=~e);for(var t="";e>=32;)t+=String.fromCharCode(63+(32|31&e)),e>>=5;return t+=String.fromCharCode(e+63)}function i(e){for(var r=[],t=0;t<e.length;t++)r.push(e[t].slice().reverse());return r}var a={};a.decode=function(e,r){for(var t,n=0,i=0,a=0,o=[],u=0,d=0,f=null,c=Math.pow(10,r||5);n<e.length;){f=null,u=0,d=0;do{d|=(31&(f=e.charCodeAt(n++)-63))<<u,u+=5}while(f>=32);t=1&d?~(d>>1):d>>1,u=d=0;do{d|=(31&(f=e.charCodeAt(n++)-63))<<u,u+=5}while(f>=32);i+=t,a+=1&d?~(d>>1):d>>1,o.push([i/c,a/c])}return o},a.encode=function(e,r){if(!e.length)return"";for(var t=Math.pow(10,r||5),i=n(e[0][0],t)+n(e[0][1],t),a=1;a<e.length;a++){var o=e[a],u=e[a-1];i+=n(o[0]-u[0],t),i+=n(o[1]-u[1],t)}return i},a.fromGeoJSON=function(e,r){if(e&&"Feature"===e.type&&(e=e.geometry),!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return a.encode(i(e.coordinates),r)},a.toGeoJSON=function(e,r){return{type:"LineString",coordinates:i(a.decode(e,r))}},"object"==typeof r&&r.exports&&(r.exports=a)},{}],2:[function(e,r,t){!function(){"use strict";L.travel.interface().addProvider(function(){var r=["kUndefined","kDepartDefault","kDepartRight","kDepartLeft","kArriveDefault","kArriveRight","kArriveLeft","kNewNameStraight","kContinueStraight","kTurnSlightRight","kTurnRight","kTurnSharpRight","kUturnRight","kUturnLeft","kTurnSharpLeft","kTurnLeft","kTurnSlightLeft","kUndefined","kOnRampRight","kOnRampLeft","kOffRampRight","kOffRampLeft","kStayStraight","kStayRight","kStayLeft","kMergeDefault","kRoundaboutRight","kRoundaboutExit","kFerryEnter","kFerryExit","kUndefined","kUndefined","kUndefined","kUndefined","kUndefined","kUndefined","kUndefined"],t={fr:["","Départ","Départ à votre droite","Départ à votre gauche","Arrivée","Arrivée à droite","Arrvée à gauche","Continuer","Continuer","Tourner légèrement à droite","Tourner  à droite","Tourner franchement à droite","Demi-tour vers la droite","Demi-tour vers la gauche","Tourner franchement à gauche","Tourner à gauche","Tourner légèrement à gauche","Prendre l'entrée en face","Prendre l'entrée à droite","Prendre l'entrée à gauche","Prendre la sortie à droite","Prendre la sortie à gauche","Rester au centre","Rester à droite","Rester à gauche","Fusionner","Entrer dans le rond-point","Sortir du rond-point","Entrer dans le ferry","Sortir du ferry","","","","","","",""]},n=function(n,i){var a=JSON.parse(n);i.itinerary.itineraryPoints.removeAll(),i.itinerary.maneuvers.removeAll();var o=0,u=0;a.trip.legs.forEach(function(n){n.shape=e("polyline").decode(n.shape,6);for(var a=[],d=0;d<n.shape.length;d++){var f=L.travel.interface().itineraryPoint;f.latLng=n.shape[d],d!==n.shape.length-1&&(f.distance=L.latLng(n.shape[d]).distanceTo(L.latLng(n.shape[d+1])),o+=f.distance),a.push(f),i.itinerary.itineraryPoints.add(f)}n.maneuvers.forEach(function(e){var n=L.travel.interface().maneuver;n.iconName=r[e.type||0],n.instruction=e.instruction||"",n.streetName="",e.street_names&&e.street_names.forEach(function(e){n.streetName+=e+" "}),n.direction="---",n.simplifiedInstruction=t.fr[e.type||0],n.distance=1e3*(e.length||0),u+=n.distance,n.duration=e.time||0,n.itineraryPointObjId=a[e.begin_shape_index].objId,a[e.begin_shape_index]=n.objId,i.itinerary.maneuvers.add(n)})});for(var d=u/o,f=i.itinerary.itineraryPoints.iterator;!f.done;)f.value.distance=f.value.distance*d};return{get icon(){return""},getUrl:function(e,r,t){return""},parseResponse:function(e,r){n(e,r)},get name(){return"mapzen"},get transitModes(){return["car","bike","pedestrian"]}}}())}()},{polyline:1}]},{},[2]);